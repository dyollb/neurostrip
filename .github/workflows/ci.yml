name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e ".[dev,cpu]"

    - name: Lint with ruff
      run: |
        python -m ruff check src tests

    - name: Format check with ruff
      run: |
        python -m ruff format --check src tests

    - name: Type check with mypy
      run: |
        python -m mypy src

    - name: Security check with bandit
      run: |
        python -m bandit -r src

    - name: Run tests with pytest
      run: |
        python -m pytest tests/ -v --cov=neurostrip --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  install-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Test installation (CPU)
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e ".[cpu]"
        python -c "import neurostrip; print('CPU installation successful')"

    - name: Test installation (GPU)
      run: |
        python -m pip install -e ".[gpu]"
        python -c "import neurostrip; print('GPU installation successful')"
